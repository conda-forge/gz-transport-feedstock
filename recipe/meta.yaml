{% set component_name = "transport" %}
{% set repo_name = "gz-" + component_name %}
{% set version = "14.1.0" %}
{% set major_version = version.split('.')[0] %}
{% set name = repo_name + major_version %}
{% set component_version = component_name + major_version %}
{% set cxx_name = "lib" + name %}
{% set python_name = name + "-python" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/gazebosim/{{ repo_name }}/archive/{{ repo_name }}{{ major_version }}_{{ version }}.tar.gz
    sha256: 3993d6272eb0c5a2ec94807b18ae02091b8a1b1723a345a83332de3677baff9a

build:
  number: 1
  skip: true  # [(target_platform not in ("osx-64", "osx-arm64")) or py != 39]
 
outputs:
  - name: {{ cxx_name }}
    script: build_cxx.sh  # [unix]
    script: bld_cxx.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage(cxx_name, max_pin='x') }}
      ignore_run_exports:
        - python
        - python_abi
      ignore_run_exports_from:
        - python
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - ninja
        - cmake
        - pkg-config
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
        - libgz-cmake4
        - libgz-msgs11
        - libgz-tools2
        - libgz-utils3
        - cppzmq
        - zeromq
        - libuuid                            # [linux]
        - libabseil
        - libprotobuf
        - sqlite
      run:
        - cppzmq
    test:
      commands:
        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]
        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]
        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]
        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\include\\gz\\{{ component_version }}\\gz\\{{ component_name }}.hh exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\{{ name }}\\{{ name }}-config.cmake exit 1  # [win]

  - name: {{ python_name }}
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - ninja
        - cmake
        - pkg-config
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - pybind11                               # [build_platform != target_platform]
        - pybind11-abi                           # [build_platform != target_platform]
        - pytest                                 # [build_platform != target_platform]
      host:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - python
        - libgz-math8
        - libgz-msgs11 11.1.0.* *_0
        - libcxx 20.1.8 *_0
        - pybind11 3.0.0 *_0
        - libexpat 2.7.0
        - pybind11-abi
        - pytest
        - gz-msgs11-python 11.1.0 *_0
        # Workaround for errors of type
        # package libgz-sim7-<..> requires <...>, but none of the providers can be installed
        - libabseil
        - libprotobuf
        - libgz-msgs11
      run:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - python
        - gz-msgs11-python
    test:
      commands:
        - pip check
      requires:
        - pip
      imports:
        - gz.transport14

  - name: {{ name }}
    build:
      run_exports:
        - {{ pin_subpackage(cxx_name, max_pin='x') }}
    requirements:
      run:
        - {{ pin_subpackage(cxx_name, exact=True) }}
        - {{ pin_subpackage(python_name, max_pin='x.x.x') }}
    test:
      commands:
        - test -f ${PREFIX}/include/gz/{{ component_version }}/gz/{{ component_name }}.hh  # [not win]
        - test -f ${PREFIX}/lib/lib{{ name }}.so  # [linux]
        - test -f ${PREFIX}/lib/lib{{ name }}.dylib  # [osx]
        - test -f ${PREFIX}/lib/cmake/{{ name }}/{{ name }}-config.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\include\\gz\\{{ component_version }}\\gz\\{{ component_name }}.hh exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\{{ name }}\\{{ name }}-config.cmake exit 1  # [win]
      requires:
        - pip
      imports:
        - gz.transport14

about:
  home: https://github.com/gazebosim/{{ repo_name }}
  license: Apache-2.0
  license_file: LICENSE
  summary: Transport library for component communication based on publication/subscription and service calls.

extra:
  feedstock-name: {{ repo_name }}
  recipe-maintainers:
    - wolfv
    - traversaro
    - j-rivero
